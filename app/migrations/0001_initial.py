# Generated by Django 4.2.1 on 2023-05-23 02:48

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AfternoonBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='weather', max_length=15)),
                ('text', models.CharField(default='오늘의 날씨 알려주기', max_length=15)),
                ('turn', models.IntegerField(default=1)),
                ('playlists', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EveningBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='weather', max_length=15)),
                ('text', models.CharField(default='오늘의 날씨 알려주기', max_length=15)),
                ('turn', models.IntegerField(default=1)),
                ('playlists', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MorningBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='weather', max_length=15)),
                ('text', models.CharField(default='오늘의 날씨 알려주기', max_length=15)),
                ('turn', models.IntegerField(default=1)),
                ('playlists', models.TextField(null=True)),
                ('dest_list', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Toggle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mor_weather', models.IntegerField(default=1)),
                ('mor_todo', models.IntegerField(default=1)),
                ('mor_dest', models.IntegerField(default=1)),
                ('mor_pathfind', models.IntegerField(default=1)),
                ('aft_todo', models.IntegerField(default=1)),
                ('aft_whitenoise', models.IntegerField(default=1)),
                ('aft_nap', models.IntegerField(default=1)),
                ('eve_health', models.IntegerField(default=1)),
                ('eve_progress', models.IntegerField(default=1)),
                ('eve_question', models.IntegerField(default=1)),
                ('eve_todo', models.IntegerField(default=1)),
                ('eve_sleep', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(default='', max_length=254, unique=True, verbose_name='email address')),
                ('password', models.CharField(max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
